# Generated by Django 5.2.3 on 2025-09-16 00:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0006_alter_service_category'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date this analytics data represents')),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], help_text='Time period for this analytics data', max_length=10)),
                ('views', models.PositiveIntegerField(default=0, help_text='Number of views for this service')),
                ('orders', models.PositiveIntegerField(default=0, help_text='Number of orders for this service')),
                ('revenue', models.DecimalField(decimal_places=2, default=0, help_text='Revenue generated by this service', max_digits=10)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average rating for this service', max_digits=3, null=True)),
                ('rating_count', models.PositiveIntegerField(default=0, help_text='Number of ratings for this service')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(help_text='The service this analytics data belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='services.service')),
            ],
            options={
                'ordering': ['-date', '-created_at'],
                'unique_together': {('service', 'date', 'period')},
            },
        ),
        migrations.CreateModel(
            name='VendorAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date this analytics data represents')),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], help_text='Time period for this analytics data', max_length=10)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, help_text='Total revenue for this period', max_digits=10)),
                ('order_count', models.PositiveIntegerField(default=0, help_text='Number of orders for this period')),
                ('completed_orders', models.PositiveIntegerField(default=0, help_text='Number of completed orders for this period')),
                ('cancelled_orders', models.PositiveIntegerField(default=0, help_text='Number of cancelled orders for this period')),
                ('unique_customers', models.PositiveIntegerField(default=0, help_text='Number of unique customers for this period')),
                ('new_customers', models.PositiveIntegerField(default=0, help_text='Number of new customers for this period')),
                ('popular_services', models.JSONField(default=dict, help_text='Popular services data for this period')),
                ('location_insights', models.JSONField(default=dict, help_text='Location-based insights for this period')),
                ('demand_heatmap', models.JSONField(default=dict, help_text='Demand heatmap data for this period')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(help_text='The vendor this analytics data belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date', '-created_at'],
                'unique_together': {('vendor', 'date', 'period')},
            },
        ),
    ]
