# Generated by Django 5.2.3 on 2025-09-12 15:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bookings', '0003_initial'),
        ('common', '0001_initial'),
        ('services', '0004_service_requires_contact_service_supports_booking_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('timestamped_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='common.timestamped')),
                ('complaint_type', models.CharField(choices=[('service', 'Service Issue'), ('order', 'Order Problem'), ('booking', 'Booking Issue'), ('payment', 'Payment Problem'), ('vendor', 'Vendor Behavior'), ('platform', 'Platform Issue'), ('other', 'Other')], help_text='Type of complaint', max_length=20)),
                ('subject', models.CharField(help_text='Brief subject/title of the complaint', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the complaint')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('rejected', 'Rejected')], default='pending', help_text='Current status of the complaint', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level of the complaint', max_length=10)),
                ('admin_response', models.TextField(blank=True, help_text="Admin's response to the complaint", null=True)),
                ('resolved_at', models.DateTimeField(blank=True, help_text='Timestamp when complaint was resolved', null=True)),
                ('assigned_admin', models.ForeignKey(blank=True, help_text='Admin user assigned to handle the complaint', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints_assigned', to=settings.AUTH_USER_MODEL)),
                ('complainant', models.ForeignKey(help_text='The user filing the complaint', on_delete=django.db.models.deletion.CASCADE, related_name='complaints_filed', to=settings.AUTH_USER_MODEL)),
                ('related_booking', models.ForeignKey(blank=True, help_text='Booking being complained about', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='bookings.booking')),
                ('related_order', models.ForeignKey(blank=True, help_text='Order being complained about', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='services.order')),
                ('related_service', models.ForeignKey(blank=True, help_text='Service being complained about', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints', to='services.service')),
            ],
            options={
                'verbose_name': 'Complaint',
                'verbose_name_plural': 'Complaints',
                'ordering': ['-created_at'],
                'constraints': [models.CheckConstraint(condition=models.Q(('complaint_type__in', ['service', 'order', 'booking', 'payment', 'vendor', 'platform', 'other'])), name='valid_complaint_type'), models.CheckConstraint(condition=models.Q(('status__in', ['pending', 'in_progress', 'resolved', 'closed', 'rejected'])), name='valid_complaint_status'), models.CheckConstraint(condition=models.Q(('priority__in', ['low', 'medium', 'high', 'urgent'])), name='valid_complaint_priority')],
            },
            bases=('common.timestamped',),
        ),
    ]
