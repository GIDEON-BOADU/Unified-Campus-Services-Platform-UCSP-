# Generated by Django 5.2.3 on 2025-09-18 00:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bookings', '0003_initial'),
        ('services', '0007_printrequest'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_notifications', models.BooleanField(default=True, help_text='Receive booking-related notifications')),
                ('order_notifications', models.BooleanField(default=True, help_text='Receive order-related notifications')),
                ('payment_notifications', models.BooleanField(default=True, help_text='Receive payment-related notifications')),
                ('review_notifications', models.BooleanField(default=True, help_text='Receive review-related notifications')),
                ('complaint_notifications', models.BooleanField(default=True, help_text='Receive complaint-related notifications')),
                ('system_notifications', models.BooleanField(default=True, help_text='Receive system announcements')),
                ('preferred_delivery_method', models.CharField(choices=[('websocket', 'WebSocket (Real-time)'), ('email', 'Email'), ('push', 'Push Notification'), ('sms', 'SMS')], default='websocket', help_text='Preferred notification delivery method', max_length=20)),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Start of quiet hours (no notifications)', null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, help_text='End of quiet hours (no notifications)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='User these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Notification title', max_length=200)),
                ('message', models.TextField(help_text='Notification message content')),
                ('notification_type', models.CharField(choices=[('booking_created', 'New Booking'), ('booking_cancelled', 'Booking Cancelled'), ('booking_confirmed', 'Booking Confirmed'), ('booking_completed', 'Booking Completed'), ('order_created', 'New Order'), ('order_cancelled', 'Order Cancelled'), ('order_confirmed', 'Order Confirmed'), ('payment_received', 'Payment Received'), ('review_received', 'New Review'), ('complaint_received', 'New Complaint'), ('system_announcement', 'System Announcement')], help_text='Type of notification', max_length=50)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Notification priority level', max_length=10)),
                ('is_read', models.BooleanField(default=False, help_text='Whether the notification has been read')),
                ('is_sent', models.BooleanField(default=False, help_text='Whether the notification has been sent via WebSocket')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the notification was created')),
                ('read_at', models.DateTimeField(blank=True, help_text='When the notification was read', null=True)),
                ('extra_data', models.JSONField(blank=True, default=dict, help_text='Additional data for the notification')),
                ('recipient', models.ForeignKey(help_text='User who will receive the notification', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_booking', models.ForeignKey(blank=True, help_text='Related booking (if applicable)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='bookings.booking')),
                ('related_order', models.ForeignKey(blank=True, help_text='Related order (if applicable)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='services.order')),
                ('related_service', models.ForeignKey(blank=True, help_text='Related service (if applicable)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='services.service')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read'], name='realtime_no_recipie_d8968f_idx'), models.Index(fields=['notification_type'], name='realtime_no_notific_205dc6_idx'), models.Index(fields=['created_at'], name='realtime_no_created_0e49dd_idx')],
            },
        ),
    ]
