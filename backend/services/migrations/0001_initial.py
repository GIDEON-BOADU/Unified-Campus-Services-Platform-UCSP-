# Generated by Django 5.2.3 on 2025-08-22 02:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for the order', null=True)),
                ('delivery_address', models.CharField(blank=True, help_text='Delivery address (if applicable)', max_length=500, null=True)),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('preparing', 'Preparing'), ('ready', 'Ready'), ('delivering', 'Delivering'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', help_text='Current status of the order', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total cost of the order', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when order was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when order was last updated')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='Number of items')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit', max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this item', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when order item was created')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Rating from 1 to 5 stars')),
                ('comment', models.TextField(blank=True, help_text='Detailed review comment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when review was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when review was last updated')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(help_text='Name of the service', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the service')),
                ('category', models.CharField(choices=[('food', 'Food & Beverages'), ('beauty', 'Beauty & Grooming'), ('printing', 'Printing & Copying'), ('laundry', 'Laundry Services'), ('academic', 'Academic Services'), ('transport', 'Transportation'), ('health', 'Health & Wellness'), ('entertainment', 'Entertainment'), ('other', 'Other Services')], help_text='Service category for organization', max_length=20)),
                ('service_type', models.CharField(choices=[('booking', 'Booking Required'), ('ordering', 'Ordering System'), ('contact', 'Contact Directly'), ('walk_in', 'Walk-in Service')], default='contact', help_text='How students interact with this service', max_length=20)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, help_text='Base service price in GHS (for simple services)', max_digits=10, null=True)),
                ('has_flexible_pricing', models.BooleanField(default=False, help_text='Whether this service has multiple pricing options')),
                ('is_available', models.BooleanField(default=True, help_text='Whether the service is currently available')),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('busy', 'Busy/High Demand'), ('unavailable', 'Unavailable'), ('closed', 'Closed')], default='available', help_text='Current availability status', max_length=20)),
                ('contact_info', models.TextField(blank=True, help_text='Additional contact information (WhatsApp, phone, etc.)', null=True)),
                ('location', models.CharField(blank=True, help_text='Service location or delivery area', max_length=500, null=True)),
                ('images', models.ImageField(blank=True, help_text='Service images', null=True, upload_to='service_images/')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average rating of the service (1.00-5.00)', max_digits=3, null=True)),
                ('total_ratings', models.PositiveIntegerField(default=0, help_text='Total number of ratings received')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when service was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when service was last updated')),
                ('supports_booking', models.BooleanField(default=False, help_text='Whether this service supports booking/appointments')),
                ('supports_ordering', models.BooleanField(default=False, help_text='Whether this service supports ordering')),
                ('supports_walk_in', models.BooleanField(default=False, help_text='Whether this service supports walk-ins')),
                ('requires_contact', models.BooleanField(default=False, help_text='Whether this service requires direct contact')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the service item', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of the service item', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of this item in GHS', max_digits=10)),
                ('image', models.ImageField(blank=True, help_text='image of the service item', null=True, upload_to='service_item_images/')),
                ('is_available', models.BooleanField(default=True, help_text='Whether this item is currently available')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when item was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when item was last updated')),
            ],
            options={
                'verbose_name': 'Service Item',
                'verbose_name_plural': 'Service Items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(help_text='Official business name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Business description', null=True)),
                ('business_hours', models.TextField(blank=True, help_text='Operating hours (e.g., Mon-Fri 9AM-6PM)', null=True)),
                ('address', models.CharField(blank=True, help_text='Physical business address', max_length=500, null=True)),
                ('phone', models.CharField(blank=True, help_text='Business phone number', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, help_text='Business email address', max_length=254, null=True)),
                ('website', models.URLField(blank=True, help_text='Business website URL', null=True)),
                ('logo', models.ImageField(blank=True, help_text='Business logo', null=True, upload_to='vendor_logos/')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether the business is verified by admin')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the business is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when profile was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when profile was last updated')),
            ],
            options={
                'verbose_name': 'Vendor Profile',
                'verbose_name_plural': 'Vendor Profiles',
                'ordering': ['business_name'],
            },
        ),
    ]
