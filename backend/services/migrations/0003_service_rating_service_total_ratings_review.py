# Generated by Django 5.2.3 on 2025-06-26 23:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('services', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='service',
            name='rating',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Average rating of the service (1.00-5.00)', max_digits=3, null=True),
        ),
        migrations.AddField(
            model_name='service',
            name='total_ratings',
            field=models.PositiveIntegerField(default=0, help_text='Total number of ratings received'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Rating from 1 to 5 stars')),
                ('comment', models.TextField(blank=True, help_text='Detailed review comment', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when review was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when review was last updated')),
                ('service', models.ForeignKey(help_text='The service being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='services.service')),
                ('user', models.ForeignKey(help_text='The user writing the review', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(fields=('service', 'user'), name='unique_user_service_review', violation_error_message='You can only review a service once.')],
            },
        ),
    ]
