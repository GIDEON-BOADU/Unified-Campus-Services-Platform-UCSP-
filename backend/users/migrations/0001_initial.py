# Generated by Django 5.2.3 on 2025-08-22 02:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('vendor', 'Vendor'), ('admin', 'Admin')], default='student', help_text='User role in the platform', max_length=10)),
                ('phone_number', models.CharField(blank=True, help_text='Unique phone number for user identification', max_length=15, null=True, unique=True)),
                ('profile_picture', models.ImageField(blank=True, help_text='User profile picture', null=True, upload_to='profiles/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VendorApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(help_text='Name of the business', max_length=200)),
                ('business_description', models.TextField(help_text='Description of the business')),
                ('category', models.CharField(choices=[('food', 'Food & Beverages'), ('beauty', 'Beauty & Grooming'), ('printing', 'Printing & Copying'), ('laundry', 'Laundry Services'), ('academic', 'Academic Services'), ('transport', 'Transportation'), ('health', 'Health & Wellness'), ('entertainment', 'Entertainment'), ('other', 'Other Services')], help_text='Business category', max_length=20)),
                ('address', models.CharField(help_text='Business address', max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', help_text='Current status of the application', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Admin notes on the application', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='When the application was submitted')),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When the application was reviewed', null=True)),
                ('applicant', models.ForeignKey(help_text='The user applying to become a vendor', on_delete=django.db.models.deletion.CASCADE, related_name='vendor_applications', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, help_text='Admin who reviewed this application', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vendor Application',
                'verbose_name_plural': 'Vendor Applications',
                'ordering': ['-submitted_at'],
                'constraints': [models.UniqueConstraint(fields=('applicant',), name='unique_vendor_application_per_user', violation_error_message='You have already submitted a vendor application.')],
            },
        ),
    ]
